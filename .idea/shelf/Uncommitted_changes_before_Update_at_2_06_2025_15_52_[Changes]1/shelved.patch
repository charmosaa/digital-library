Index: models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># models.py\r\nfrom datetime import datetime\r\nfrom flask_sqlalchemy import SQLAlchemy\r\n\r\n# placeholder, real object initialized in app.py \r\ndb = SQLAlchemy()\r\n\r\n\r\n# BOOK model\r\nclass Book(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    title = db.Column(db.String(255), nullable=False)\r\n    author = db.Column(db.String(255), nullable=False)\r\n    isbn = db.Column(db.String(20), unique=True, nullable=True) # should be unique\r\n    year_published = db.Column(db.Integer, nullable=True)\r\n    publisher = db.Column(db.String(255), nullable=True)\r\n    description = db.Column(db.Text, nullable=True)\r\n    page_count = db.Column(db.Integer, nullable=True)\r\n    cover_url = db.Column(db.String(500), nullable=True) # cover img link\r\n    # Read status: 0 - To do, 1 - During, 2 - Finished\r\n    status = db.Column(db.Integer, default=0, nullable=False)\r\n    current_page = db.Column(db.Integer, default=0, nullable=True)\r\n    rating = db.Column(db.Integer, nullable=True) # rating (from 1 - 5)\r\n    review = db.Column(db.Text, nullable=True)\r\n    date_added = db.Column(db.DateTime, default=datetime.utcnow, nullable=False)\r\n    is_favorite = db.Column(db.Boolean, default=False)\r\n\r\n    # relation to Category\r\n    category_id = db.Column(db.Integer, db.ForeignKey('category.id'), nullable=True)\r\n    category = db.relationship('Category', backref='books')\r\n\r\n    def __repr__(self):\r\n        return f\"Book('{self.title}', '{self.author}', '{self.status}')\"\r\n\r\n# CATEGORY model\r\nclass Category(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    name = db.Column(db.String(100), unique=True, nullable=False)\r\n\r\n    def __repr__(self):\r\n        return f\"Category('{self.name}')\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models.py b/models.py
--- a/models.py	(revision 1d24802f5b725964f743ff14536c516aac44c233)
+++ b/models.py	(date 1748868824518)
@@ -1,6 +1,8 @@
 # models.py
 from datetime import datetime
 from flask_sqlalchemy import SQLAlchemy
+from flask_login import UserMixin
+
 
 # placeholder, real object initialized in app.py 
 db = SQLAlchemy()
@@ -25,6 +27,9 @@
     date_added = db.Column(db.DateTime, default=datetime.utcnow, nullable=False)
     is_favorite = db.Column(db.Boolean, default=False)
 
+    # realtion to User
+    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=True)
+
     # relation to Category
     category_id = db.Column(db.Integer, db.ForeignKey('category.id'), nullable=True)
     category = db.relationship('Category', backref='books')
@@ -38,4 +43,12 @@
     name = db.Column(db.String(100), unique=True, nullable=False)
 
     def __repr__(self):
-        return f"Category('{self.name}')"
\ No newline at end of file
+        return f"Category('{self.name}')"
+
+#USER model
+class User(db.Model, UserMixin):
+    id = db.Column(db.Integer, primary_key=True)
+    username = db.Column(db.String(150), unique=True, nullable=False)
+    password = db.Column(db.String(200), nullable=False)
+
+    books = db.relationship('Book', backref='owner', lazy=True)
Index: templates/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/login.html b/templates/login.html
new file mode 100644
--- /dev/null	(date 1748870966082)
+++ b/templates/login.html	(date 1748870966082)
@@ -0,0 +1,106 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Log in</title>
+    <style>
+        body { font-family: Arial, sans-serif; background: #f8f9fa; padding: 40px; }
+        .container { max-width: 400px; margin: auto; background: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
+        h2 { color: #007bff; text-align: center; }
+        label { display: block; margin-top: 15px; font-weight: bold; }
+        input[type="text"], input[type="password"] {
+            width: 100%; padding: 10px; margin-top: 5px; border: 1px solid #ccc; border-radius: 5px;
+        }
+        button {
+            margin-top: 20px; width: 100%; padding: 10px; background-color: #007bff;
+            color: white; border: none; border-radius: 5px; font-size: 16px;
+        }
+        a { display: block; text-align: center; margin-top: 15px; color: #007bff; text-decoration: none; }
+        a:hover { text-decoration: underline; }
+
+        .popup-modal {
+            display: none;
+            position: fixed;
+            top: 0; left: 0; right: 0; bottom: 0;
+            background: rgba(0,0,0,0.5);
+            z-index: 9999;
+            justify-content: center;
+            align-items: center;
+        }
+        .popup-content {
+            background: white;
+            padding: 30px;
+            border-radius: 10px;
+            text-align: center;
+            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
+            max-width: 400px;
+        }
+        .popup-button {
+            display: inline-block;
+            margin-top: 15px;
+            padding: 10px 20px;
+            background: #007bff;
+            color: white;
+            text-decoration: none;
+            border-radius: 5px;
+        }
+        .popup-button:hover {
+            background: #0056b3;
+        }
+        .close-button {
+            position: absolute;
+            top: 10px;
+            right: 15px;
+            font-size: 24px;
+            font-weight: bold;
+            color: #aaa;
+            cursor: pointer;
+        }
+        .close-button:hover {
+            color: #000;
+        }
+    </style>
+</head>
+<body>
+<div class="container">
+    <h2>Log in</h2>
+    <form method="POST" action="{{ url_for('login') }}">
+        <label for="username">Username</label>
+        <input type="text" name="username" required>
+
+        <label for="password">Password</label>
+        <input type="password" name="password" required>
+
+        <button type="submit">Log in</button>
+    </form>
+    <a href="{{ url_for('register') }}">Don't have an account? Register here</a>
+    <a href="{{ url_for('home') }}">← Back to your Shelf</a>
+</div>
+
+<!-- MODAL: KONTO NIE ISTNIEJE -->
+<div id="noUserModal" class="popup-modal">
+    <div class="popup-content">
+        <span class="close-button" onclick="document.getElementById('noUserModal').style.display='none'">&times;</span>
+        <h2>Konto nie istnieje!</h2>
+        <p>Sprawdź dane logowania lub zarejestruj się.</p>
+        <div style="margin-top: 20px;">
+            <a href="{{ url_for('register') }}" class="popup-button">Zarejestruj się</a>
+            <a href="{{ url_for('login') }}" class="popup-button" style="background: #6c757d;">Spróbuj ponownie</a>
+        </div>
+    </div>
+</div>
+
+<script>
+window.addEventListener('DOMContentLoaded', () => {
+    {% with messages = get_flashed_messages(with_categories=true) %}
+        {% for category, message in messages %}
+            {% if category == 'no_user' %}
+                document.getElementById('noUserModal').style.display = 'flex';
+            {% endif %}
+        {% endfor %}
+    {% endwith %}
+});
+</script>
+
+</body>
+</html>
Index: templates/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/register.html b/templates/register.html
new file mode 100644
--- /dev/null	(date 1748870966080)
+++ b/templates/register.html	(date 1748870966080)
@@ -0,0 +1,107 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Register</title>
+    <style>
+        body { font-family: Arial, sans-serif; background: #f8f9fa; padding: 40px; }
+        .container { max-width: 400px; margin: auto; background: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
+        h2 { color: #28a745; text-align: center; }
+        label { display: block; margin-top: 15px; font-weight: bold; }
+        input[type="text"], input[type="password"] {
+            width: 100%; padding: 10px; margin-top: 5px; border: 1px solid #ccc; border-radius: 5px;
+        }
+        button {
+            margin-top: 20px; width: 100%; padding: 10px; background-color: #28a745;
+            color: white; border: none; border-radius: 5px; font-size: 16px;
+        }
+        a { display: block; text-align: center; margin-top: 15px; color: #28a745; text-decoration: none; }
+        a:hover { text-decoration: underline; }
+
+        .popup-modal {
+            display: none;
+            position: fixed;
+            top: 0; left: 0; right: 0; bottom: 0;
+            background: rgba(0,0,0,0.5);
+            z-index: 9999;
+            justify-content: center;
+            align-items: center;
+        }
+        .popup-content {
+            background: white;
+            padding: 30px;
+            border-radius: 10px;
+            text-align: center;
+            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
+            max-width: 400px;
+            position: relative;
+        }
+        .popup-button {
+            display: inline-block;
+            margin-top: 15px;
+            padding: 10px 20px;
+            background: #28a745;
+            color: white;
+            text-decoration: none;
+            border-radius: 5px;
+        }
+        .popup-button:hover {
+            background: #218838;
+        }
+        .close-button {
+            position: absolute;
+            top: 10px;
+            right: 15px;
+            font-size: 24px;
+            font-weight: bold;
+            color: #aaa;
+            cursor: pointer;
+        }
+        .close-button:hover {
+            color: #000;
+        }
+    </style>
+</head>
+<body>
+<div class="container">
+    <h2>Create an Account</h2>
+    <form method="POST" action="{{ url_for('register') }}">
+        <label for="username">Username</label>
+        <input type="text" name="username" required>
+
+        <label for="password">Password</label>
+        <input type="password" name="password" required>
+
+        <button type="submit">Register</button>
+    </form>
+    <a href="{{ url_for('login') }}">Already have an account? Log in</a>
+    <a href="{{ url_for('home') }}">← Back to your Shelf</a>
+</div>
+
+<!-- MODAL: USERNAME JUŻ ISTNIEJE -->
+<div id="userExistsModal" class="popup-modal">
+    <div class="popup-content">
+        <span class="close-button" onclick="document.getElementById('userExistsModal').style.display='none'">&times;</span>
+        <h2>Nazwa użytkownika już istnieje!</h2>
+        <p>Wybierz inną nazwę użytkownika lub zaloguj się.</p>
+        <div style="margin-top: 20px;">
+            <a href="{{ url_for('login') }}" class="popup-button">Zaloguj się</a>
+            <a href="{{ url_for('register') }}" class="popup-button" style="background: #6c757d;">Spróbuj ponownie</a>
+        </div>
+    </div>
+</div>
+
+<script>
+window.addEventListener('DOMContentLoaded', () => {
+    {% with messages = get_flashed_messages(with_categories=true) %}
+        {% for category, message in messages %}
+            {% if category == 'user_exists' %}
+                document.getElementById('userExistsModal').style.display = 'flex';
+            {% endif %}
+        {% endfor %}
+    {% endwith %}
+});
+</script>
+
+</body>
+</html>
